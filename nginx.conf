user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    server {
        listen       80;
        server_name  _;
        return 301 https://$host$request_uri;

    }

    # server {
    #     listen 443 ssl default_server;

    #     ssl_protocols TLSv1.3 TLSv1.2 TLSv1.1;

    #     ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:RSA+AESGCM:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;

    #     ssl_certificate     ${SSL_CERT_PATH};
    #     ssl_certificate_key ${SSL_KEY_PATH};

    #     ssl_prefer_server_ciphers on;

    #     location / {
    #         # if ($request_method = 'OPTIONS') {
    #         #     add_header 'Access-Control-Allow-Origin' '*';
    #         #     add_header 'Access-Control-Allow-Credentials' 'true';
    #         #     add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    #         #     #
    #         #     # Custom headers and headers various browsers *should* be OK with but aren't
    #         #     #
    #         #     add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,username,password';
    #         #     #
    #         #     # Tell client that this pre-flight info is valid for 20 days
    #         #     #
    #         #     # add_header 'Access-Control-Max-Age' 1728000;
    #         #     add_header 'Content-Type' 'text/plain; charset=utf-8';
    #         #     add_header 'Content-Length' 0;
    #         #     return 204;
    #         #  }

    #         root   /usr/share/nginx/html;
    #         try_files $uri $uri/ /index.html;
    #         index  index.html index.htm;
    #     }

    #     error_page   500 502 503 504  /50x.html;
    #     location = /50x.html {
    #         root   /usr/share/nginx/html;
    #     }              
    # }
}
